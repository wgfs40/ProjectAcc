@model ProjectEng.Models.Task

@{
    ViewBag.Title = "CreateTask";
}

<style type="text/css">
    .col-md-7{
        width:28%;
    }

    .modal-header, h4, .close {
      background-color: #5cb85c;
      color:white !important;
      text-align: center;
      font-size: 30px;
  }

    .modal-body{
        background-color:white;
    }

  .modal-footer {
      background-color: #f9f9f9;
  }
</style>

<h2>Create Task</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectID,"Project ID:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="ProjectID" id="ProjectID" value="@ViewBag.ProjectId" class="form-control" disabled>               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description,10,40,  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate,"Due Date:" ,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Responsable,"Responsible:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.DropDownList("Responsable", null, new { @class = "form-control"}) 
            </div>
            <div class="col-md-3">
                <button type="button" id="addStaffbutton" class="btn btn-success">Add New Staff</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentState,"Current Stage:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CurrentState, new { @class = "form-control bfh-number" })
                @Html.ValidationMessageFor(model => model.CurrentState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<!--Modal Form-->
<div class="modal fade" id="addStaff" role="dialog">
    <div class="modal-dialog">
        <!--Modal Content-->
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
            <h4><span class="glyphicon glyphicon-lock">Add New Staff</span></h4>
        </div>
        <div class="modal-body">
                <div class="form-group">
                    <label for="staffname"><span class="glyphicon glyphicon-user"></span> Staff Name:</label>
                    <input type="text" class="form-control" id="staffname" placeholder="Enter Staff Name">
                    <br />
                    <label for="staffname"><span class="glyphicon glyphicon-user"></span> Staff Description:</label>
                    <input type="text" class="form-control" id="staffdesc" placeholder="Enter Staff Description">
                </div>
                <button type="button" id="buttonSave" class="btn btn-success btn-block"><span class="glyphicon glyphicon-off"></span> Save</button>
            <div class="modal-footer">
                <button type="submit" class="btn btn-danger btn-default pull-left" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>

            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "ProjectList", "Project", new { PMStaff = ViewBag.PM }, new { @class = "btn btn-default" })
</div>

@section css{
    @Styles.Render("~/Content/themes/base/all.css")
}


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")


    <script type="text/javascript">
        $(function () {
            $("#DueDate").datepicker({ dateFormat: 'mm/dd/yy' });

            $("#addStaffbutton").click(function () {
                $("#addStaff").modal();
            });

            $("#buttonSave").click(function () {

                var StaffName = $("#staffname").val();
                var StaffDescription = $("#staffdesc").val();

                $.post("/eng/Task/AddStaffAsync", { staffname: StaffName, staffdescription: StaffDescription })
                    .done(function (msg) {

                    var defaultSelected = false;
                    var nowSelected = true;

                    $("#Responsable").append(new Option(msg.StaffName, msg.StaffName, defaultSelected, nowSelected));
                    $("#addStaff").modal('hide');
                   
                    }).error(function (xhr, status, error) {
                    alert("xhr:"+xhr+" " + "Status:"+ status + " "+ "Error: " + error);
                });


                
            });
        });
    </script>
}